=== Инвентарь ===
Является интерфейсом для контейнеров (персонаж, инвентарь, быстрый доступ и 
текущий контейнер, с которым взаимодействует игрок).

=== Применение ===
- Взаимодействие с контейнерами с помощью графического интерфейса
- Отправка событий о действиях игрока с контейнерами (единственный интерфейс
  контейнера для игрока) на сервер (внутренне)
- Обработка изменения данных контейнеров и синхронизация с клиентом (быстрый
  доступ, инвентарь, персонаж и контейнер, с которым взаимодействует игрок)
- Сообщает другим модулям о текущем активном слоту быстрого доступа игрока
- Отвечает за использование вещей (по тому принципу, что сейчас, но неплохо
  было бы придумать более удобную структуру кода). При этом может 
  использовать данные CrosshairTarget и, по сути, быть свалной логики разных
  модулей (лучшего в голову ничего не приходит вообще). Возвожно, вызывает
  события onItemUseStart / onItemUseEnd, которые могут быть отменены другими
  модулями (подумать над этим)

GUI (HTML & JS) отвечает только за отображение вещей и вызывает асинхронные 
browser-события с каждым действием (попытка перетащить вещь, положить вещь,
переместить и т.д.). НЕ содерджит никакой логики, полностью повинуется Lua
и не предпринимает сам ничего (не меняет вещи в слотах, не берет их, не
запрещает брать и т.д.), ТОЛЬКО реагирует на команды от Lua.

Inventory Lua в свою очередь тесно взаимодействует с Container. Container НЕ
синхронизируется между клиентом и сервером сам, это полностью забота Inventory
(но Container предоставляет средства сериализации, т.е. Inventory не вдается в
подробности работы контейнеров и просто создает объект из json-строки).
Логика фильтрации слотов контейнеров лежит на Container и идентична для одного
контейнера на сервере и клиенте. Пример: игрок ложит в пустой слот какую-то 
вещь.
1. Inventory GUI отправляет событие о том, что игрок нажал ЛКМ на слоту C.N
2. Inventory Lua видит, что это попытка положить весь draggingStack в слот C.N
3. Inventory Lua вызывает методы для помещения draggingStack в C.N
4.1. Если Container разрешает перемещение, Inventory отправляет внутреннее событие
     на сервер (в Inventory) и действие дублируется там (с возможными доп. 
     действиями) и в то же время отправляет на GUI события "установить слот C.N"
	 и "убрать draggingStack"
4.2. Если Container не разрешает перемещение, Inventory игнорирует событие от 
     GUI и не шлет на сервер данных, а также не отновляет GUI